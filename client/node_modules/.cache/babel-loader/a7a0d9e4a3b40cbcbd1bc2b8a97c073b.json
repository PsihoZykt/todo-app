{"ast":null,"code":"import _objectSpread from \"/home/psihoz/todo-app-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport UsersAPI from '../api/UsersAPI';\nconst SET_USER = 'SET_USER';\nconst initialState = {\n  isAuth: false,\n  currentUser: {}\n};\nexport default ((state = initialState, action) => {\n  // eslint-disable-next-line sonarjs/no-small-switch\n  switch (action.type) {\n    case SET_USER:\n      {\n        return _objectSpread({}, state, {\n          isAuth: action.isAuth,\n          currentUser: action.user\n        });\n      }\n\n    default:\n      return state;\n  }\n});\nexport const setUserSession = user => ({\n  type: SET_USER,\n  isAuth: true,\n  user\n});\nexport const deleteUserSession = () => ({\n  type: SET_USER,\n  isAuth: false,\n  user: null\n}); // Thunks\n\nexport const login = (username, email, password) => dispatch => UsersAPI.login(username, email, password).then(res => {\n  // console.log(\"LOGIN IS\" + res)\n  if (res.user) return dispatch(setUserSession(res.user));\n  return dispatch(setUserSession());\n});\nexport const logout = () => dispatch => UsersAPI.logout().then(() => dispatch(deleteUserSession()));\nexport const createUser = (username, email, password) => dispatch => UsersAPI.createUser(username, email, password);\nexport const isAuth = (username, email, password) => dispatch => UsersAPI.isAuth(username, email, password);","map":{"version":3,"sources":["/home/psihoz/todo-app-front/src/redux/authReducer.js"],"names":["UsersAPI","SET_USER","initialState","isAuth","currentUser","state","action","type","user","setUserSession","deleteUserSession","login","username","email","password","dispatch","then","res","logout","createUser"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,iBAArB;AAEA,MAAMC,QAAQ,GAAG,UAAjB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,KADW;AAEnBC,EAAAA,WAAW,EAAE;AAFM,CAArB;AAKA,gBAAe,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAC/C;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,QAAL;AAAe;AACb,iCAAYI,KAAZ;AAAmBF,UAAAA,MAAM,EAAEG,MAAM,CAACH,MAAlC;AAA0CC,UAAAA,WAAW,EAAEE,MAAM,CAACE;AAA9D;AACD;;AACD;AACE,aAAOH,KAAP;AALJ;AAOD,CATD;AAWA,OAAO,MAAMI,cAAc,GAAGD,IAAI,KAAK;AACrCD,EAAAA,IAAI,EAAEN,QAD+B;AAErCE,EAAAA,MAAM,EAAE,IAF6B;AAGrCK,EAAAA;AAHqC,CAAL,CAA3B;AAMP,OAAO,MAAME,iBAAiB,GAAG,OAAO;AACtCH,EAAAA,IAAI,EAAEN,QADgC;AAEtCE,EAAAA,MAAM,EAAE,KAF8B;AAGtCK,EAAAA,IAAI,EAAE;AAHgC,CAAP,CAA1B,C,CAMP;;AACA,OAAO,MAAMG,KAAK,GAAG,CAACC,QAAD,EAAWC,KAAX,EAAkBC,QAAlB,KAA+BC,QAAQ,IAAIf,QAAQ,CAACW,KAAT,CAAeC,QAAf,EAAyBC,KAAzB,EAAgCC,QAAhC,EAA0CE,IAA1C,CAAgDC,GAAD,IAAS;AACtH;AACA,MAAIA,GAAG,CAACT,IAAR,EAAc,OAAOO,QAAQ,CAACN,cAAc,CAACQ,GAAG,CAACT,IAAL,CAAf,CAAf;AACd,SAAOO,QAAQ,CAACN,cAAc,EAAf,CAAf;AACD,CAJ+D,CAAzD;AAMP,OAAO,MAAMS,MAAM,GAAG,MAAMH,QAAQ,IAAIf,QAAQ,CAACkB,MAAT,GAAkBF,IAAlB,CAAuB,MAAMD,QAAQ,CAACL,iBAAiB,EAAlB,CAArC,CAAjC;AACP,OAAO,MAAMS,UAAU,GAAG,CAACP,QAAD,EAAWC,KAAX,EAAkBC,QAAlB,KAA+BC,QAAQ,IAAIf,QAAQ,CAACmB,UAAT,CAAoBP,QAApB,EAA8BC,KAA9B,EAAqCC,QAArC,CAA9D;AACP,OAAO,MAAMX,MAAM,GAAG,CAACS,QAAD,EAAWC,KAAX,EAAkBC,QAAlB,KAA+BC,QAAQ,IAAIf,QAAQ,CAACG,MAAT,CAAgBS,QAAhB,EAA0BC,KAA1B,EAAiCC,QAAjC,CAA1D","sourcesContent":["import UsersAPI from '../api/UsersAPI';\n\nconst SET_USER = 'SET_USER';\n\nconst initialState = {\n  isAuth: false,\n  currentUser: {},\n};\n\nexport default (state = initialState, action) => {\n  // eslint-disable-next-line sonarjs/no-small-switch\n  switch (action.type) {\n    case SET_USER: {\n      return { ...state, isAuth: action.isAuth, currentUser: action.user };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const setUserSession = user => ({\n  type: SET_USER,\n  isAuth: true,\n  user,\n});\n\nexport const deleteUserSession = () => ({\n  type: SET_USER,\n  isAuth: false,\n  user: null,\n});\n\n// Thunks\nexport const login = (username, email, password) => dispatch => UsersAPI.login(username, email, password).then((res) => {\n  // console.log(\"LOGIN IS\" + res)\n  if (res.user) return dispatch(setUserSession(res.user));\n  return dispatch(setUserSession());\n});\n\nexport const logout = () => dispatch => UsersAPI.logout().then(() => dispatch(deleteUserSession()));\nexport const createUser = (username, email, password) => dispatch => UsersAPI.createUser(username, email, password);\nexport const isAuth = (username, email, password) => dispatch => UsersAPI.isAuth(username, email, password);\n"]},"metadata":{},"sourceType":"module"}