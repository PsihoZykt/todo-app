{"ast":null,"code":"import _slicedToArray from \"/home/psihoz/todo-app-back/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/psihoz/todo-app-back/client/src/components/content/taskBar/TaskBarContainer.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { formValueSelector } from 'redux-form';\nimport Task from './task';\nimport { toggleTaskActive, postTask, deleteTask } from '../../../redux/navReducer';\nimport mapArrayToElements from '../../../util/utility';\nimport TaskBar from './TaskBar';\nimport Login from '../login/index';\n\nconst TaskBarContainer = props => {\n  const tasks = props.tasks;\n  console.log(tasks);\n\n  const _useState = useState([...tasks]),\n        _useState2 = _slicedToArray(_useState, 2),\n        filteredTasks = _useState2[0],\n        setFilteredTasks = _useState2[1];\n\n  useEffect(() => {\n    if (!tasks) return React.createElement(Login, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    });\n    let filter = '';\n    if (props.searchField) filter = props.searchField;\n    console.log(tasks);\n    setFilteredTasks(tasks.filter(task => {\n      return task.name.search(filter) !== -1;\n    }));\n  }, [props.tasks]);\n\n  const onTaskClick = task => props.toggleTaskActive(task);\n\n  const onTaskAdded = task => props.postTask(task);\n\n  const onTaskRemoved = task => props.deleteTask(task);\n\n  const taskElements = mapArrayToElements(filteredTasks, Task, onTaskClick, onTaskRemoved);\n  return React.createElement(React.Fragment, null, React.createElement(TaskBar, {\n    taskElements: taskElements,\n    onTaskAdded: onTaskAdded,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), ' ');\n};\n\nconst selector = formValueSelector('searchTask');\n\nconst mapStateToProps = state => ({\n  // tasks: state.navReducer.tasks,\n  searchField: selector(state, 'searchField')\n});\n\nexport default connect(mapStateToProps, {\n  toggleTaskActive,\n  postTask,\n  deleteTask\n})(withRouter(TaskBarContainer));","map":{"version":3,"sources":["/home/psihoz/todo-app-back/client/src/components/content/taskBar/TaskBarContainer.jsx"],"names":["React","useEffect","useState","connect","withRouter","formValueSelector","Task","toggleTaskActive","postTask","deleteTask","mapArrayToElements","TaskBar","Login","TaskBarContainer","props","tasks","console","log","filteredTasks","setFilteredTasks","filter","searchField","task","name","search","onTaskClick","onTaskAdded","onTaskRemoved","taskElements","selector","mapStateToProps","state"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,iBAAT,QAAkC,YAAlC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,gBAAT,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,2BAAvD;AACA,OAAOC,kBAAP,MAA+B,uBAA/B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;AAEA,MAAMC,gBAAgB,GAAGC,KAAK,IAAI;AAAA,QACxBC,KADwB,GACdD,KADc,CACxBC,KADwB;AAEhCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;;AAFgC,oBAGUb,QAAQ,CAAC,CAAC,GAAGa,KAAJ,CAAD,CAHlB;AAAA;AAAA,QAGzBG,aAHyB;AAAA,QAGVC,gBAHU;;AAIhClB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACc,KAAL,EAAY,OAAO,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAEZ,QAAIK,MAAM,GAAG,EAAb;AACA,QAAIN,KAAK,CAACO,WAAV,EAAuBD,MAAM,GAAGN,KAAK,CAACO,WAAf;AACvBL,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAI,IAAAA,gBAAgB,CACdJ,KAAK,CAACK,MAAN,CAAaE,IAAI,IAAI;AACnB,aAAOA,IAAI,CAACC,IAAL,CAAUC,MAAV,CAAiBJ,MAAjB,MAA6B,CAAC,CAArC;AACD,KAFD,CADc,CAAhB;AAKD,GAXQ,EAWN,CAACN,KAAK,CAACC,KAAP,CAXM,CAAT;;AAcA,QAAMU,WAAW,GAAGH,IAAI,IAAIR,KAAK,CAACP,gBAAN,CAAuBe,IAAvB,CAA5B;;AACA,QAAMI,WAAW,GAAGJ,IAAI,IAAIR,KAAK,CAACN,QAAN,CAAec,IAAf,CAA5B;;AACA,QAAMK,aAAa,GAAGL,IAAI,IAAIR,KAAK,CAACL,UAAN,CAAiBa,IAAjB,CAA9B;;AAEA,QAAMM,YAAY,GAAGlB,kBAAkB,CAACQ,aAAD,EAAgBZ,IAAhB,EAAsBmB,WAAtB,EAAmCE,aAAnC,CAAvC;AAEA,SACE,0CACE,oBAAC,OAAD;AAAS,IAAA,YAAY,EAAEC,YAAvB;AAAqC,IAAA,WAAW,EAAEF,WAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EACmE,GADnE,CADF;AAKD,CA7BD;;AA8BA,MAAMG,QAAQ,GAAGxB,iBAAiB,CAAC,YAAD,CAAlC;;AAEA,MAAMyB,eAAe,GAAGC,KAAK,KAAK;AAChC;AACAV,EAAAA,WAAW,EAAEQ,QAAQ,CAACE,KAAD,EAAQ,aAAR;AAFW,CAAL,CAA7B;;AAIA,eAAe5B,OAAO,CACpB2B,eADoB,EAEpB;AACEvB,EAAAA,gBADF;AAEEC,EAAAA,QAFF;AAGEC,EAAAA;AAHF,CAFoB,CAAP,CAObL,UAAU,CAACS,gBAAD,CAPG,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { formValueSelector } from 'redux-form';\nimport Task from './task';\nimport { toggleTaskActive, postTask, deleteTask } from '../../../redux/navReducer';\nimport mapArrayToElements from '../../../util/utility';\nimport TaskBar from './TaskBar';\nimport Login from '../login/index';\n\nconst TaskBarContainer = props => {\n  const { tasks } = props;\n  console.log(tasks)\n  const [filteredTasks, setFilteredTasks] = useState([...tasks]);\n  useEffect(() => {\n    if (!tasks) return <Login/>;\n\n    let filter = '';\n    if (props.searchField) filter = props.searchField;\n    console.log(tasks)\n    setFilteredTasks(\n      tasks.filter(task => {\n        return task.name.search(filter) !== -1;\n      }),\n    );\n  }, [props.tasks]);\n\n\n  const onTaskClick = task => props.toggleTaskActive(task);\n  const onTaskAdded = task => props.postTask(task);\n  const onTaskRemoved = task => props.deleteTask(task);\n\n  const taskElements = mapArrayToElements(filteredTasks, Task, onTaskClick, onTaskRemoved);\n\n  return (\n    <>\n      <TaskBar taskElements={taskElements} onTaskAdded={onTaskAdded}/>{' '}\n    </>\n  );\n};\nconst selector = formValueSelector('searchTask');\n\nconst mapStateToProps = state => ({\n  // tasks: state.navReducer.tasks,\n  searchField: selector(state, 'searchField'),\n});\nexport default connect(\n  mapStateToProps,\n  {\n    toggleTaskActive,\n    postTask,\n    deleteTask,\n  },\n)(withRouter(TaskBarContainer));\n"]},"metadata":{},"sourceType":"module"}