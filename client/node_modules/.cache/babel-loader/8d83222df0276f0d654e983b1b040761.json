{"ast":null,"code":"import _objectSpread from \"/home/psihoz/todo-app-back/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport TodosAPI from '../api/TodosAPI';\nconst ADD_TASK = 'ADD_TASK';\nconst REMOVE_TASK = 'REMOVE_TASK';\nconst SET_TASKS = 'SET_TASKS';\nconst EDIT_TASK = 'EDIT_TASK';\nconst TOGGLE_IS_ACTIVE = 'TOGGLE_IS_ACTIVE';\nconst initialState = {\n  tasks: []\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case SET_TASKS:\n      {\n        console.log(action.type);\n        return _objectSpread({}, state, {\n          tasks: action.tasks\n        });\n      }\n\n    case ADD_TASK:\n      {\n        return _objectSpread({}, state, {\n          tasks: [...state.tasks, action.task]\n        });\n      }\n\n    case EDIT_TASK:\n      {\n        let newTasks = [...state.tasks];\n        newTasks = newTasks.map(task => {\n          let newTask = _objectSpread({}, task);\n\n          if (newTask.id === action.task.id) {\n            newTask = action.task;\n          }\n\n          return newTask;\n        });\n        return _objectSpread({}, state, {\n          tasks: newTasks\n        });\n      }\n\n    case REMOVE_TASK:\n      {\n        const taskIdx = state.tasks.findIndex(task => task.id === action.task.id);\n        const newTasks = [...state.tasks.filter((elem, idx) => idx !== taskIdx)];\n        return _objectSpread({}, state, {\n          tasks: newTasks\n        });\n      }\n\n    case TOGGLE_IS_ACTIVE:\n      {\n        let newTasks = [...state.tasks];\n        newTasks = newTasks.map(task => {\n          let newTask = _objectSpread({}, task);\n\n          if (newTask.id === action.task.id) {\n            newTask = action.task;\n          } else {\n            newTask.isActive = false;\n          }\n\n          return newTask;\n        });\n        return _objectSpread({}, state, {\n          tasks: newTasks\n        });\n      }\n\n    default:\n      return state;\n  }\n});\nexport const addTask = task => ({\n  type: ADD_TASK,\n  task\n});\nexport const removeTask = task => ({\n  type: REMOVE_TASK,\n  task\n});\nexport const toggleIsActive = task => ({\n  type: TOGGLE_IS_ACTIVE,\n  task\n});\nexport const setTasks = tasks => ({\n  type: SET_TASKS,\n  tasks\n});\nexport const editTask = task => ({\n  type: EDIT_TASK,\n  task\n}); // Thunks\n\nexport const postTask = task => dispatch => {\n  console.log(\"Post task reducer\");\n  TodosAPI.postTodo(task).then(todo => {\n    const newTask = {\n      id: todo.id,\n      name: todo.name,\n      isActive: todo.isActive,\n      subTasks: todo.subTasks\n    };\n    return dispatch(addTask(newTask));\n  }).catch(err => console.log(err));\n};\nexport const getTasks = () => dispatch => {\n  TodosAPI.getAllTodos().then(data => dispatch(setTasks(data))).catch(err => console.log(err));\n};\nexport const deleteTask = task => dispatch => {\n  TodosAPI.deleteTodo(task).then(() => dispatch(removeTask(task))).catch(err => console.log(err));\n};\nexport const toggleTaskActive = task => dispatch => {\n  console.log(\"toggleTaskActive reducer\");\n\n  const newTask = _objectSpread({}, task);\n\n  newTask.isActive = !task.isActive;\n  dispatch(toggleIsActive(newTask));\n};\nexport const addSubtask = (task, label) => dispatch => {\n  console.log(\"addSubtask reducer\");\n\n  const newTask = _objectSpread({}, task);\n\n  newTask.subTasks = [...task.subTasks];\n  newTask.subTasks.push({\n    label,\n    isChecked: false\n  });\n  return TodosAPI.editTask(newTask).then(data => {\n    return dispatch(editTask(data));\n  });\n};\nexport const toggleSubTaskChecked = (task, id, isChecked) => dispatch => {\n  console.log(\"toggleSubTaskChecked\");\n\n  const newTask = _objectSpread({}, task);\n\n  newTask.subTasks = newTask.subTasks.map(subTask => {\n    const newSubTask = _objectSpread({}, subTask);\n\n    if (newSubTask.id === id) newSubTask.isChecked = isChecked;\n    return newSubTask;\n  });\n  return TodosAPI.editTask(newTask).then(data => dispatch(editTask(data)));\n};\nexport const removeSubtask = (task, id) => dispatch => {\n  const newTask = _objectSpread({}, task);\n\n  newTask.subTasks = newTask.subTasks.filter(subTask => subTask.id !== id);\n  return TodosAPI.editTask(newTask).then(data => {\n    return dispatch(editTask(data));\n  });\n};","map":{"version":3,"sources":["/home/psihoz/todo-app-back/client/src/redux/navReducer.js"],"names":["TodosAPI","ADD_TASK","REMOVE_TASK","SET_TASKS","EDIT_TASK","TOGGLE_IS_ACTIVE","initialState","tasks","state","action","type","console","log","task","newTasks","map","newTask","id","taskIdx","findIndex","filter","elem","idx","isActive","addTask","removeTask","toggleIsActive","setTasks","editTask","postTask","dispatch","postTodo","then","todo","name","subTasks","catch","err","getTasks","getAllTodos","data","deleteTask","deleteTodo","toggleTaskActive","addSubtask","label","push","isChecked","toggleSubTaskChecked","subTask","newSubTask","removeSubtask"],"mappings":"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","sourcesContent":["import TodosAPI from '../api/TodosAPI';\n\nconst ADD_TASK = 'ADD_TASK';\nconst REMOVE_TASK = 'REMOVE_TASK';\nconst SET_TASKS = 'SET_TASKS';\nconst EDIT_TASK = 'EDIT_TASK';\nconst TOGGLE_IS_ACTIVE = 'TOGGLE_IS_ACTIVE';\nconst initialState = {\n  tasks: [],\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n\n    case SET_TASKS: {\n      console.log(action.type)\n      return {\n        ...state,\n        tasks: action.tasks\n      };\n    }\n    case ADD_TASK: {\n      return {\n        ...state,\n        tasks: [...state.tasks, action.task],\n      };\n    }\n    case EDIT_TASK: {\n      let newTasks = [...state.tasks];\n      newTasks = newTasks.map(task => {\n        let newTask = { ...task };\n        if (newTask.id === action.task.id) {\n          newTask = action.task;\n        }\n        return newTask;\n      });\n      return {\n        ...state,\n        tasks: newTasks\n      };\n    }\n    case REMOVE_TASK: {\n      const taskIdx = state.tasks.findIndex(task => task.id === action.task.id);\n      const newTasks = [...state.tasks.filter((elem, idx) => idx !== taskIdx)];\n      return {\n        ...state,\n        tasks: newTasks\n      };\n    }\n    case TOGGLE_IS_ACTIVE: {\n      let newTasks = [...state.tasks];\n      newTasks = newTasks.map(task => {\n        let newTask = { ...task };\n        if (newTask.id === action.task.id) {\n          newTask = action.task;\n        } else {\n          newTask.isActive = false;\n        }\n        return newTask;\n      });\n      return {\n        ...state,\n        tasks: newTasks\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport const addTask = task => ({\n  type: ADD_TASK,\n  task,\n});\n\nexport const removeTask = task => ({\n  type: REMOVE_TASK,\n  task,\n});\nexport const toggleIsActive = task => ({\n  type: TOGGLE_IS_ACTIVE,\n  task,\n});\nexport const setTasks = tasks => ({\n  type: SET_TASKS,\n  tasks,\n});\n\nexport const editTask = task => ({\n  type: EDIT_TASK,\n  task,\n});\n\n// Thunks\nexport const postTask = task => dispatch => {\n  console.log(\"Post task reducer\")\n  TodosAPI.postTodo(task)\n    .then(todo => {\n      const newTask = {\n        id: todo.id,\n        name: todo.name,\n        isActive: todo.isActive,\n        subTasks: todo.subTasks,\n      };\n      return dispatch(addTask(newTask));\n    })\n    .catch(err => console.log(err));\n};\nexport const getTasks = () => dispatch => {\n   TodosAPI.getAllTodos()\n    .then(data => dispatch(setTasks(data)))\n    .catch(err => console.log(err));\n};\nexport const deleteTask = task => dispatch => {\n  TodosAPI.deleteTodo(task)\n    .then(() => dispatch(removeTask(task)))\n    .catch(err => console.log(err));\n};\n\nexport const toggleTaskActive = task => dispatch => {\n  console.log(\"toggleTaskActive reducer\")\n  const newTask = { ...task };\n  newTask.isActive = !task.isActive;\n  dispatch(toggleIsActive(newTask))\n};\n\nexport const addSubtask = (task, label) => dispatch => {\n  console.log(\"addSubtask reducer\")\n  const newTask = { ...task };\n  newTask.subTasks = [...task.subTasks];\n  newTask.subTasks.push({\n    label,\n    isChecked: false\n  });\n  return TodosAPI.editTask(newTask)\n    .then(data => {\n      return dispatch(editTask(data));\n    });\n};\n\nexport const toggleSubTaskChecked = (task, id, isChecked) => dispatch => {\n  console.log(\"toggleSubTaskChecked\")\n\n  const newTask = { ...task };\n  newTask.subTasks = newTask.subTasks.map(subTask => {\n    const newSubTask = { ...subTask };\n    if (newSubTask.id === id) newSubTask.isChecked = isChecked;\n    return newSubTask;\n  });\n  return TodosAPI.editTask(newTask)\n    .then(data => dispatch(editTask(data)));\n};\n\nexport const removeSubtask = (task, id) => dispatch => {\n  const newTask = { ...task };\n  newTask.subTasks = newTask.subTasks.filter(subTask => subTask.id !== id);\n  return TodosAPI.editTask(newTask)\n    .then(data => {\n      return dispatch(editTask(data));\n    });\n};\n\n"]},"metadata":{},"sourceType":"module"}