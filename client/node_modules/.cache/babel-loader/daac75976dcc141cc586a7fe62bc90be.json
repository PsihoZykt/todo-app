{"ast":null,"code":"var _jsxFileName = \"/home/psihoz/todo-app-front/src/components/content/login/Login.jsx\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport { getTasks } from '../../../redux/navReducer';\nimport { login } from '../../../redux/authReducer';\nimport s from './login.module.css';\n\nconst Login = props => {\n  if (props.isAuth) return React.createElement(Redirect, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  });\n\n  const onSubmit = ({\n    username,\n    email,\n    password\n  }) => props.login(username = '', email, password).then(() => props.getTasks()).catch(err => {\n    console.log('LOGIN catch');\n    return React.createElement(Redirect, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    });\n  });\n\n  return React.createElement(\"div\", {\n    className: \"\".concat(s.loginWrapper),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(LoginForm, {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), \"Not register yet?\", React.createElement(\"div\", {\n    tabIndex: 0,\n    role: \"button\",\n    onClick: () => props.history.push('/register'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Register now!\"));\n};\n\nlet LoginForm = props => {\n  const handleSubmit = props.handleSubmit;\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"inputEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Email\"), React.createElement(Field, {\n    component: \"input\",\n    name: \"email\",\n    placeholder: \"email\",\n    className: \"form-control\",\n    id: \"inputEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"inputPassword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Password\"), React.createElement(Field, {\n    component: \"input\",\n    placeholder: \"password\",\n    name: \"password\",\n    type: \"password\",\n    className: \"form-control\",\n    id: \"inputPassword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Sign in\"));\n};\n\nLoginForm = reduxForm({\n  form: 'login'\n})(LoginForm);\n\nconst mapStateToProps = state => ({\n  isAuth: state.authReducer.isAuth\n});\n\nexport default connect(mapStateToProps, {\n  login,\n  getTasks\n})(withRouter(Login));","map":{"version":3,"sources":["/home/psihoz/todo-app-front/src/components/content/login/Login.jsx"],"names":["React","Field","reduxForm","connect","withRouter","Redirect","getTasks","login","s","Login","props","isAuth","onSubmit","username","email","password","then","catch","err","console","log","loginWrapper","history","push","LoginForm","handleSubmit","form","mapStateToProps","state","authReducer"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Field, reduxForm} from 'redux-form';\nimport {connect} from 'react-redux';\nimport {withRouter, Redirect} from 'react-router-dom';\nimport {getTasks} from '../../../redux/navReducer';\nimport {login} from '../../../redux/authReducer';\nimport s from './login.module.css';\n\nconst Login = (props) => {\n    if (props.isAuth) return <Redirect to=\"/\"/>;\n    const onSubmit = ({username, email, password}) => props.login((username = ''), email, password)\n        .then(() => props.getTasks())\n        .catch((err) => {\n            console.log('LOGIN catch');\n            return <Redirect to=\"/login\"/>;\n        });\n    return (\n        <div className={`${s.loginWrapper}`}>\n            <LoginForm onSubmit={onSubmit}/>\n            Not register yet?\n            <div tabIndex={0} role=\"button\" onClick={() => props.history.push('/register')}>\n                Register now!\n            </div>\n        </div>\n    );\n};\n\nlet LoginForm = (props) => {\n    const {handleSubmit} = props;\n    return (\n        <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n                <label htmlFor=\"inputEmail\">Email</label>\n                <Field\n                    component=\"input\"\n                    name=\"email\"\n                    placeholder=\"email\"\n                    className=\"form-control\"\n                    id=\"inputEmail\"\n                />\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"inputPassword\">Password</label>\n                <Field\n                    component=\"input\"\n                    placeholder=\"password\"\n                    name=\"password\"\n                    type=\"password\"\n                    className=\"form-control\"\n                    id=\"inputPassword\"\n                />\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">\n                Sign in\n            </button>\n        </form>\n    );\n};\nLoginForm = reduxForm({form: 'login'})(LoginForm);\nconst mapStateToProps = state => ({\n    isAuth: state.authReducer.isAuth,\n});\n\nexport default connect(\n    mapStateToProps,\n    {login, getTasks},\n)(withRouter(Login));\n"]},"metadata":{},"sourceType":"module"}