{"ast":null,"code":"import _objectSpread from \"/home/psihoz/todo-app-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/psihoz/todo-app-front/src/util/utility.jsx\";\nimport React from 'react';\nimport getDisplayName from 'react-display-name'; // experimental function, which map array of data to react components\n// Assumed, function receive  array to iterate, returned  react Property\n// And array of properties with length = 1 as children\n// Each property is  a object with only one key\n// So, if you want pass propsKeys , you should get them as\n// const propName = props.children[0].propName\n// or const [{propName}] = props  (destructuring)\n\nconst mapArrayToElements = (arr, Property, ...propsKeys) => arr.map(element => {\n  const componentName = getDisplayName(Property).toLowerCase();\n  const elementObject = {\n    [componentName]: _objectSpread({}, element)\n  };\n  return React.createElement(Property, Object.assign({\n    key: element.id\n  }, elementObject, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), propsKeys);\n});\n\nexport default mapArrayToElements;","map":{"version":3,"sources":["/home/psihoz/todo-app-front/src/util/utility.jsx"],"names":["React","getDisplayName","mapArrayToElements","arr","Property","propsKeys","map","element","componentName","toLowerCase","elementObject","id"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,oBAA3B,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,kBAAkB,GAAG,CAACC,GAAD,EAAMC,QAAN,EAAgB,GAAGC,SAAnB,KAAiCF,GAAG,CAACG,GAAJ,CAAQC,OAAO,IAAI;AAC7E,QAAMC,aAAa,GAAGP,cAAc,CAACG,QAAD,CAAd,CAAyBK,WAAzB,EAAtB;AACA,QAAMC,aAAa,GAAG;AAAE,KAACF,aAAD,qBAAsBD,OAAtB;AAAF,GAAtB;AACA,SACE,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,OAAO,CAACI;AAAvB,KAA+BD,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGL,SADH,CADF;AAKD,CAR2D,CAA5D;;AAUA,eAAeH,kBAAf","sourcesContent":["import React from 'react';\nimport getDisplayName from 'react-display-name';\n// experimental function, which map array of data to react components\n// Assumed, function receive  array to iterate, returned  react Property\n// And array of properties with length = 1 as children\n// Each property is  a object with only one key\n// So, if you want pass propsKeys , you should get them as\n// const propName = props.children[0].propName\n// or const [{propName}] = props  (destructuring)\nconst mapArrayToElements = (arr, Property, ...propsKeys) => arr.map(element => {\n  const componentName = getDisplayName(Property).toLowerCase();\n  const elementObject = { [componentName]: { ...element } };\n  return (\n    <Property key={element.id} {...elementObject}>\n      {propsKeys}\n    </Property>\n  );\n});\n\nexport default mapArrayToElements;\n"]},"metadata":{},"sourceType":"module"}