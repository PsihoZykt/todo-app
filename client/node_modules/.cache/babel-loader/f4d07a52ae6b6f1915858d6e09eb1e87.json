{"ast":null,"code":"var _jsxFileName = \"/home/psihozykt/react-projects/todo-app-front/src/components/content/login/Login.jsx\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport { getTasks } from '../../../redux/navReducer';\nimport { login } from '../../../redux/authReducer';\nimport s from './login.module.css';\n\nconst Login = props => {\n  if (props.isAuth) return React.createElement(Redirect, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  });\n\n  const onSubmit = ({\n    username,\n    email,\n    password\n  }) => {\n    // eslint-disable-next-line no-return-assign\n    return props.login(username = '', email, password).then(() => props.getTasks());\n  };\n\n  return React.createElement(\"div\", {\n    className: \"\".concat(s.loginWrapper),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(LoginForm, {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), \"Not register yet?\", React.createElement(\"div\", {\n    tabIndex: 0,\n    role: \"button\",\n    onClick: () => props.history.push('/register'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Register now!\"));\n};\n\nlet LoginForm = props => {\n  const handleSubmit = props.handleSubmit;\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"inputEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Email\"), React.createElement(Field, {\n    component: \"input\",\n    name: \"email\",\n    placeholder: \"email\",\n    className: \"form-control\",\n    id: \"inputEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"inputPassword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Password\"), React.createElement(Field, {\n    component: \"input\",\n    placeholder: \"password\",\n    name: \"password\",\n    type: \"password\",\n    className: \"form-control\",\n    id: \"inputPassword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Sign in\"));\n};\n\nLoginForm = reduxForm({\n  form: 'login'\n})(LoginForm);\n\nconst mapStateToProps = state => ({\n  isAuth: state.authReducer.isAuth\n});\n\nexport default connect(mapStateToProps, {\n  login,\n  getTasks\n})(withRouter(Login));","map":{"version":3,"sources":["/home/psihozykt/react-projects/todo-app-front/src/components/content/login/Login.jsx"],"names":["React","Field","reduxForm","connect","withRouter","Redirect","getTasks","login","s","Login","props","isAuth","onSubmit","username","email","password","then","loginWrapper","history","push","LoginForm","handleSubmit","form","mapStateToProps","state","authReducer"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport { getTasks } from '../../../redux/navReducer';\nimport { login } from '../../../redux/authReducer';\nimport s from './login.module.css';\n\nconst Login = props => {\n  if (props.isAuth) return <Redirect to=\"/\" />;\n  const onSubmit = ({ username, email, password }) => {\n    // eslint-disable-next-line no-return-assign\n    return props.login((username = ''), email, password).then(() => props.getTasks());\n  };\n\n  return (\n    <div className={`${s.loginWrapper}`}>\n      <LoginForm onSubmit={onSubmit} />\n      Not register yet?\n      <div tabIndex={0} role=\"button\" onClick={() => props.history.push('/register')}>\n        Register now!\n      </div>\n    </div>\n  );\n};\n\nlet LoginForm = props => {\n  const { handleSubmit } = props;\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label htmlFor=\"inputEmail\">Email</label>\n        <Field\n          component=\"input\"\n          name=\"email\"\n          placeholder=\"email\"\n          className=\"form-control\"\n          id=\"inputEmail\"\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"inputPassword\">Password</label>\n        <Field\n          component=\"input\"\n          placeholder=\"password\"\n          name=\"password\"\n          type=\"password\"\n          className=\"form-control\"\n          id=\"inputPassword\"\n        />\n      </div>\n      <button type=\"submit\" className=\"btn btn-primary\">\n        Sign in\n      </button>\n    </form>\n  );\n};\nLoginForm = reduxForm({ form: 'login' })(LoginForm);\nconst mapStateToProps = state => ({\n  isAuth: state.authReducer.isAuth,\n});\n\nexport default connect(\n  mapStateToProps,\n  { login, getTasks },\n)(withRouter(Login));\n"]},"metadata":{},"sourceType":"module"}