{"ast":null,"code":"var _jsxFileName = \"/home/psihoz/todo-app-back/client/src/components/content/taskContent/TaskContentContainer.jsx\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { addSubtask, toggleSubTaskChecked, removeSubtask } from '../../../redux/navReducer';\nimport SubTask from './subTask';\nimport TaskContent from './TaskContent';\nimport mapArrayToElements from '../../../util/utility';\n\nconst TaskContentContainer = props => {\n  const tasks = props.tasks,\n        match = props.match;\n\n  const onChecked = (task, id, isChecked) => props.toggleSubTaskChecked(task, id, isChecked);\n\n  const onSubtaskAdded = (task, label) => {\n    props.addSubtask(task, label);\n  };\n\n  const onSubtaskRemoved = (task, id) => {\n    props.removeSubtask(task, id);\n  };\n\n  const id = match.params.id;\n  const task = tasks.find(t => t.id === id);\n\n  if (!id || !task) {\n    return null;\n  } else {\n    const subTasks = mapArrayToElements(task.subTasks, SubTask, task, onChecked, onSubtaskRemoved);\n    return React.createElement(TaskContent, {\n      task: task,\n      subTasks: subTasks,\n      onSubtaskAdded: onSubtaskAdded,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    });\n  }\n};\n\nconst mapStateToProps = state => ({});\n\nexport default connect(null, {\n  addSubtask,\n  toggleSubTaskChecked,\n  removeSubtask\n})(withRouter(TaskContentContainer));","map":{"version":3,"sources":["/home/psihoz/todo-app-back/client/src/components/content/taskContent/TaskContentContainer.jsx"],"names":["React","withRouter","connect","addSubtask","toggleSubTaskChecked","removeSubtask","SubTask","TaskContent","mapArrayToElements","TaskContentContainer","props","tasks","match","onChecked","task","id","isChecked","onSubtaskAdded","label","onSubtaskRemoved","params","find","t","subTasks","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,oBAArB,EAA2CC,aAA3C,QAAgE,2BAAhE;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,kBAAP,MAA+B,uBAA/B;;AAEA,MAAMC,oBAAoB,GAAGC,KAAK,IAAI;AAAA,QAC5BC,KAD4B,GACXD,KADW,CAC5BC,KAD4B;AAAA,QACrBC,KADqB,GACXF,KADW,CACrBE,KADqB;;AAEpC,QAAMC,SAAS,GAAG,CAACC,IAAD,EAAOC,EAAP,EAAWC,SAAX,KAAyBN,KAAK,CAACN,oBAAN,CAA2BU,IAA3B,EAAiCC,EAAjC,EAAqCC,SAArC,CAA3C;;AACA,QAAMC,cAAc,GAAG,CAACH,IAAD,EAAOI,KAAP,KAAiB;AACtCR,IAAAA,KAAK,CAACP,UAAN,CAAiBW,IAAjB,EAAuBI,KAAvB;AACD,GAFD;;AAGA,QAAMC,gBAAgB,GAAG,CAACL,IAAD,EAAOC,EAAP,KAAc;AACrCL,IAAAA,KAAK,CAACL,aAAN,CAAoBS,IAApB,EAA0BC,EAA1B;AACD,GAFD;;AANoC,QAU5BA,EAV4B,GAUrBH,KAAK,CAACQ,MAVe,CAU5BL,EAV4B;AAWpC,QAAMD,IAAI,GAAGH,KAAK,CAACU,IAAN,CAAWC,CAAC,IAAIA,CAAC,CAACP,EAAF,KAASA,EAAzB,CAAb;;AAEA,MAAI,CAACA,EAAD,IAAO,CAACD,IAAZ,EAAkB;AAChB,WAAO,IAAP;AACD,GAFD,MAEO;AACL,UAAMS,QAAQ,GAAGf,kBAAkB,CAACM,IAAI,CAACS,QAAN,EAAgBjB,OAAhB,EAAyBQ,IAAzB,EAA+BD,SAA/B,EAA0CM,gBAA1C,CAAnC;AACA,WAAO,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAEL,IAAnB;AAAyB,MAAA,QAAQ,EAAES,QAAnC;AAA6C,MAAA,cAAc,EAAEN,cAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;AAGF,CArBD;;AAuBA,MAAMO,eAAe,GAAGC,KAAK,KAAK,EAAL,CAA7B;;AAEA,eAAevB,OAAO,CACpB,IADoB,EAEpB;AACEC,EAAAA,UADF;AAEEC,EAAAA,oBAFF;AAGEC,EAAAA;AAHF,CAFoB,CAAP,CAObJ,UAAU,CAACQ,oBAAD,CAPG,CAAf","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { addSubtask, toggleSubTaskChecked, removeSubtask } from '../../../redux/navReducer';\nimport SubTask from './subTask';\nimport TaskContent from './TaskContent';\nimport mapArrayToElements from '../../../util/utility';\n\nconst TaskContentContainer = props => {\n  const { tasks, match } = props;\n  const onChecked = (task, id, isChecked) => props.toggleSubTaskChecked(task, id, isChecked);\n  const onSubtaskAdded = (task, label) => {\n    props.addSubtask(task, label);\n  };\n  const onSubtaskRemoved = (task, id) => {\n    props.removeSubtask(task, id);\n  };\n\n  const { id } = match.params;\n  const task = tasks.find(t => t.id === id);\n\n  if (!id || !task) {\n    return null\n  } else {\n    const subTasks = mapArrayToElements(task.subTasks, SubTask, task, onChecked, onSubtaskRemoved);\n    return <TaskContent task={task} subTasks={subTasks} onSubtaskAdded={onSubtaskAdded} />;\n  }\n\n\n};\n\nconst mapStateToProps = state => ({\n});\nexport default connect(\n  null,\n  {\n    addSubtask,\n    toggleSubTaskChecked,\n    removeSubtask,\n  },\n)(withRouter(TaskContentContainer));\n"]},"metadata":{},"sourceType":"module"}