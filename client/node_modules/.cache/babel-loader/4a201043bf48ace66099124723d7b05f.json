{"ast":null,"code":"import _objectSpread from \"/home/psihoz/todo-app-back/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport UsersAPI from '../api/UsersAPI';\nconst SET_USER = 'SET_USER';\nconst initialState = {\n  isAuth: false,\n  currentUser: {}\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER:\n      {\n        return _objectSpread({}, state, {\n          isAuth: action.isAuth,\n          currentUser: action.user\n        });\n      }\n\n    default:\n      return state;\n  }\n});\nexport const setUserSession = user => ({\n  type: SET_USER,\n  isAuth: true,\n  user\n});\nexport const deleteUserSession = () => ({\n  type: SET_USER,\n  isAuth: false,\n  user: null\n}); // Thunks\n\nexport const login = (username, email, password) => dispatch => UsersAPI.login(username, email, password).then(res => {\n  console.log(\"LOGIN IS\" + res.user);\n  if (res.user !== null) return dispatch(setUserSession(res.user));else return dispatch(deleteUserSession());\n});\nexport const logout = () => dispatch => UsersAPI.logout().then(() => dispatch(deleteUserSession()));\nexport const createUser = (username, email, password) => dispatch => UsersAPI.createUser(username, email, password);\nexport const checkAuth = () => dispatch => UsersAPI.isAuth().then(res => {\n  console.log(\"Is auth\");\n  return dispatch(setUserSession(res.user));\n});","map":{"version":3,"sources":["/home/psihoz/todo-app-back/client/src/redux/authReducer.js"],"names":["UsersAPI","SET_USER","initialState","isAuth","currentUser","state","action","type","user","setUserSession","deleteUserSession","login","username","email","password","dispatch","then","res","console","log","logout","createUser","checkAuth"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,iBAArB;AAEA,MAAMC,QAAQ,GAAG,UAAjB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,KADS;AAEjBC,EAAAA,WAAW,EAAE;AAFI,CAArB;AAKA,gBAAe,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,QAAL;AAAe;AACX,iCAAWI,KAAX;AAAkBF,UAAAA,MAAM,EAAEG,MAAM,CAACH,MAAjC;AAAyCC,UAAAA,WAAW,EAAEE,MAAM,CAACE;AAA7D;AACH;;AACD;AACI,aAAOH,KAAP;AALR;AAOH,CARD;AAUA,OAAO,MAAMI,cAAc,GAAGD,IAAI,KAAK;AACnCD,EAAAA,IAAI,EAAEN,QAD6B;AAEnCE,EAAAA,MAAM,EAAE,IAF2B;AAGnCK,EAAAA;AAHmC,CAAL,CAA3B;AAMP,OAAO,MAAME,iBAAiB,GAAG,OAAO;AACpCH,EAAAA,IAAI,EAAEN,QAD8B;AAEpCE,EAAAA,MAAM,EAAE,KAF4B;AAGpCK,EAAAA,IAAI,EAAE;AAH8B,CAAP,CAA1B,C,CAMP;;AACA,OAAO,MAAMG,KAAK,GAAG,CAACC,QAAD,EAAWC,KAAX,EAAkBC,QAAlB,KAA+BC,QAAQ,IAAIf,QAAQ,CAACW,KAAT,CAAeC,QAAf,EAAyBC,KAAzB,EAAgCC,QAAhC,EAA0CE,IAA1C,CAAgDC,GAAD,IAAS;AACpHC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAaF,GAAG,CAACT,IAA7B;AACA,MAAIS,GAAG,CAACT,IAAJ,KAAa,IAAjB,EAAuB,OAAOO,QAAQ,CAACN,cAAc,CAACQ,GAAG,CAACT,IAAL,CAAf,CAAf,CAAvB,KACK,OAAOO,QAAQ,CAACL,iBAAiB,EAAlB,CAAf;AACR,CAJ+D,CAAzD;AAMP,OAAO,MAAMU,MAAM,GAAG,MAAML,QAAQ,IAAIf,QAAQ,CAACoB,MAAT,GAAkBJ,IAAlB,CAAuB,MAAMD,QAAQ,CAACL,iBAAiB,EAAlB,CAArC,CAAjC;AACP,OAAO,MAAMW,UAAU,GAAG,CAACT,QAAD,EAAWC,KAAX,EAAkBC,QAAlB,KAA+BC,QAAQ,IAAIf,QAAQ,CAACqB,UAAT,CAAoBT,QAApB,EAA8BC,KAA9B,EAAqCC,QAArC,CAA9D;AACP,OAAO,MAAMQ,SAAS,GAAG,MAAMP,QAAQ,IAAIf,QAAQ,CAACG,MAAT,GAAkBa,IAAlB,CAAwBC,GAAD,IAAO;AACrEC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,SAAOJ,QAAQ,CAACN,cAAc,CAACQ,GAAG,CAACT,IAAL,CAAf,CAAf;AACH,CAH0C,CAApC","sourcesContent":["import UsersAPI from '../api/UsersAPI';\n\nconst SET_USER = 'SET_USER';\n\nconst initialState = {\n    isAuth: false,\n    currentUser: {},\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER: {\n            return {...state, isAuth: action.isAuth, currentUser: action.user};\n        }\n        default:\n            return state;\n    }\n};\n\nexport const setUserSession = user => ({\n    type: SET_USER,\n    isAuth: true,\n    user,\n});\n\nexport const deleteUserSession = () => ({\n    type: SET_USER,\n    isAuth: false,\n    user: null,\n});\n\n// Thunks\nexport const login = (username, email, password) => dispatch => UsersAPI.login(username, email, password).then((res) => {\n    console.log(\"LOGIN IS\" + res.user)\n    if (res.user !== null) return dispatch(setUserSession(res.user))\n    else return dispatch(deleteUserSession());\n});\n\nexport const logout = () => dispatch => UsersAPI.logout().then(() => dispatch(deleteUserSession()));\nexport const createUser = (username, email, password) => dispatch => UsersAPI.createUser(username, email, password);\nexport const checkAuth = () => dispatch => UsersAPI.isAuth().then((res)=>{\n    console.log(\"Is auth\")\n    return dispatch(setUserSession(res.user))\n});\n"]},"metadata":{},"sourceType":"module"}