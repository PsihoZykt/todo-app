{"ast":null,"code":"var _jsxFileName = \"/home/psihoz/todo-app-front/src/components/header/Header.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport TodosAPI from '../../api/TodosAPI';\nimport { setTasks } from '../../redux/navReducer';\nimport { logout, setUserSession } from '../../redux/authReducer';\nimport s from './header.module.css';\nimport UsersAPI from '../../api/UsersAPI';\nimport HeaderLabel from './headerLabel';\n\nclass Header extends React.Component {\n  componentDidMount() {\n    const props = this.props;\n    UsersAPI.isAuth().then(data => props.setUserSession(data.user)).then(() => TodosAPI.getAllTodos()).then(data => {\n      return props.setTasks(data);\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    const props = this.props;\n    const isAuth = props.isAuth,\n          currentUser = props.currentUser,\n          history = props.history;\n    return React.createElement(\"div\", {\n      className: \"row \".concat(s.header),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(HeaderLabel, {\n      isAuth: isAuth,\n      currentUser: currentUser,\n      logout: props.logout,\n      history: history,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  isAuth: state.authReducer.isAuth,\n  currentUser: state.authReducer.currentUser\n});\n\nexport default withRouter(connect(mapStateToProps, {\n  setTasks,\n  logout,\n  setUserSession\n})(Header));","map":{"version":3,"sources":["/home/psihoz/todo-app-front/src/components/header/Header.jsx"],"names":["React","connect","withRouter","TodosAPI","setTasks","logout","setUserSession","s","UsersAPI","HeaderLabel","Header","Component","componentDidMount","props","isAuth","then","data","user","getAllTodos","catch","err","console","log","render","currentUser","history","header","mapStateToProps","state","authReducer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,MAAT,EAAiBC,cAAjB,QAAuC,yBAAvC;AACA,OAAOC,CAAP,MAAc,qBAAd;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,MAAN,SAAqBV,KAAK,CAACW,SAA3B,CAAqC;AACnCC,EAAAA,iBAAiB,GAAG;AAAA,UACVC,KADU,GACA,IADA,CACVA,KADU;AAElBL,IAAAA,QAAQ,CAACM,MAAT,GACGC,IADH,CACQC,IAAI,IAAIH,KAAK,CAACP,cAAN,CAAqBU,IAAI,CAACC,IAA1B,CADhB,EAEGF,IAFH,CAEQ,MAAMZ,QAAQ,CAACe,WAAT,EAFd,EAGGH,IAHH,CAGQC,IAAI,IAAI;AACZ,aAAOH,KAAK,CAACT,QAAN,CAAeY,IAAf,CAAP;AACD,KALH,EAMGG,KANH,CAMSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANhB;AAOD;;AAEDG,EAAAA,MAAM,GAAG;AAAA,UACCV,KADD,GACW,IADX,CACCA,KADD;AAAA,UAECC,MAFD,GAEkCD,KAFlC,CAECC,MAFD;AAAA,UAESU,WAFT,GAEkCX,KAFlC,CAESW,WAFT;AAAA,UAEsBC,OAFtB,GAEkCZ,KAFlC,CAEsBY,OAFtB;AAGP,WACE;AAAK,MAAA,SAAS,gBAASlB,CAAC,CAACmB,MAAX,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AACE,MAAA,MAAM,EAAEZ,MADV;AAEE,MAAA,WAAW,EAAEU,WAFf;AAGE,MAAA,MAAM,EAAEX,KAAK,CAACR,MAHhB;AAIE,MAAA,OAAO,EAAEoB,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAUD;;AAzBkC;;AA2BrC,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCd,EAAAA,MAAM,EAAEc,KAAK,CAACC,WAAN,CAAkBf,MADM;AAEhCU,EAAAA,WAAW,EAAEI,KAAK,CAACC,WAAN,CAAkBL;AAFC,CAAL,CAA7B;;AAKA,eAAetB,UAAU,CACvBD,OAAO,CACL0B,eADK,EAEL;AAAEvB,EAAAA,QAAF;AAAYC,EAAAA,MAAZ;AAAoBC,EAAAA;AAApB,CAFK,CAAP,CAGEI,MAHF,CADuB,CAAzB","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport TodosAPI from '../../api/TodosAPI';\nimport { setTasks } from '../../redux/navReducer';\nimport { logout, setUserSession } from '../../redux/authReducer';\nimport s from './header.module.css';\nimport UsersAPI from '../../api/UsersAPI';\nimport HeaderLabel from './headerLabel';\n\nclass Header extends React.Component {\n  componentDidMount() {\n    const { props } = this;\n    UsersAPI.isAuth()\n      .then(data => props.setUserSession(data.user))\n      .then(() => TodosAPI.getAllTodos())\n      .then(data => {\n        return props.setTasks(data);\n      })\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    const { props } = this;\n    const { isAuth, currentUser, history } = props;\n    return (\n      <div className={`row ${s.header}`}>\n        <HeaderLabel\n          isAuth={isAuth}\n          currentUser={currentUser}\n          logout={props.logout}\n          history={history}\n        />\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  isAuth: state.authReducer.isAuth,\n  currentUser: state.authReducer.currentUser,\n});\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    { setTasks, logout, setUserSession },\n  )(Header),\n);\n"]},"metadata":{},"sourceType":"module"}