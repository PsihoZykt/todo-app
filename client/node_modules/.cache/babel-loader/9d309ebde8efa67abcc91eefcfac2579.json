{"ast":null,"code":"import instance from './instance';\nconst APPLICATION_JSON = 'application/json';\nconst TodosAPI = {\n  getAllTodos() {\n    console.log(\"GET ALL TODOS\");\n    return instance.get('/api/todos').then(response => response.data).then(data => data.data.map(todo => ({\n      name: todo.name,\n      isActive: todo.isActive,\n      subTasks: todo.subTasks.map(subTask => ({\n        label: subTask.label,\n        id: subTask._id,\n        isChecked: subTask.isChecked\n      })),\n      id: todo._id\n    })));\n  },\n\n  postTodo(task) {\n    return instance.post('/api/todos', {\n      task\n    }, {\n      headers: {\n        'Content-Type': APPLICATION_JSON\n      }\n    }).then(response => response.data).then(data => ({\n      name: data.data.name,\n      isActive: data.data.isActive,\n      subTasks: data.data.subTasks.map(subTask => ({\n        label: subTask.label,\n        id: subTask._id,\n        isChecked: subTask.isChecked\n      })),\n      id: data.data._id\n    }));\n  },\n\n  deleteTodo(task) {\n    return instance.delete(\"/api/todos/\".concat(task.id)).then(response => response.data);\n  },\n\n  editTask(task) {\n    return instance.put(\"/api/todos/\".concat(task.id), {\n      task\n    }, {\n      headers: {\n        'Content-Type': APPLICATION_JSON\n      }\n    }).then(response => response.data).then(data => {\n      return {\n        name: data.data.name,\n        isActive: data.data.isActive,\n        subTasks: data.data.subTasks.map(subTask => ({\n          label: subTask.label,\n          id: subTask._id,\n          isChecked: subTask.isChecked\n        })),\n        id: data.data._id\n      };\n    });\n  }\n\n};\nexport default TodosAPI;","map":{"version":3,"sources":["/home/psihoz/todo-app-back/client/src/api/TodosAPI.js"],"names":["instance","APPLICATION_JSON","TodosAPI","getAllTodos","console","log","get","then","response","data","map","todo","name","isActive","subTasks","subTask","label","id","_id","isChecked","postTodo","task","post","headers","deleteTodo","delete","editTask","put"],"mappings":"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","sourcesContent":["import instance from './instance';\n\nconst APPLICATION_JSON = 'application/json';\n\nconst TodosAPI = {\n  getAllTodos() {\n    console.log(\"GET ALL TODOS\")\n    return instance\n      .get('/api/todos')\n      .then(response => response.data)\n      .then(data => data.data.map(todo => ({\n        name: todo.name,\n        isActive: todo.isActive,\n        subTasks: todo.subTasks.map(subTask => ({\n          label: subTask.label,\n          id: subTask._id,\n          isChecked: subTask.isChecked,\n        })),\n        id: todo._id,\n      })),\n      );\n  },\n\n  postTodo(task) {\n    return instance\n      .post(\n        '/api/todos',\n        { task },\n        {\n          headers: {\n            'Content-Type': APPLICATION_JSON,\n          },\n        },\n      )\n      .then(response => response.data)\n      .then(data => ({\n        name: data.data.name,\n        isActive: data.data.isActive,\n        subTasks: data.data.subTasks.map(subTask => ({\n          label: subTask.label,\n          id: subTask._id,\n          isChecked: subTask.isChecked,\n        })),\n        id: data.data._id,\n      }));\n  },\n\n  deleteTodo(task) {\n    return instance.delete(`/api/todos/${task.id}`).then(response => response.data);\n  },\n\n  editTask(task) {\n    return instance\n      .put(\n        `/api/todos/${task.id}`,\n        { task },\n        {\n          headers: {\n            'Content-Type': APPLICATION_JSON,\n          },\n        },\n      )\n      .then(response => response.data)\n      .then(data => {\n        return {\n          name: data.data.name,\n          isActive: data.data.isActive,\n          subTasks: data.data.subTasks.map(subTask => ({\n            label: subTask.label,\n            id: subTask._id,\n            isChecked: subTask.isChecked,\n          })),\n          id: data.data._id,\n        };\n      });\n  },\n};\nexport default TodosAPI;\n"]},"metadata":{},"sourceType":"module"}