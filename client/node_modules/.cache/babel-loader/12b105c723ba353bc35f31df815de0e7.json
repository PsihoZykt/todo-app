{"ast":null,"code":"var _jsxFileName = \"/home/psihoz/WebstormProjects/todo-app/client/src/components/content/register/RegisterPage.jsx\";\n\n/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createUser } from '../../../redux/authReducer';\nimport s from './register.module.css';\nimport RegisterForm from './RegisterForm';\nimport { useAlert } from 'react-alert';\n\nconst RegisterPageContainer = props => {\n  let alert = useAlert();\n\n  const onSubmit = formData => {\n    props.createUser(formData.username, formData.email, formData.password).then(res => {\n      console.log(res);\n\n      if (res.user) {\n        alert.success(res.message);\n        props.history.push('/');\n      } else {\n        alert.error(res.message);\n      }\n    });\n  };\n\n  return React.createElement(RegisterPage, Object.assign({\n    onSubmit: onSubmit\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }));\n};\n\nconst RegisterPage = props => {\n  return React.createElement(\"div\", {\n    className: \"\".concat(s.registerWrapper),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"register\", React.createElement(RegisterForm, {\n    onSubmit: props.onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    role: \"link\",\n    tabIndex: 0,\n    onClick: () => props.history.push('/login'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"back to login\", ' '));\n};\n\nexport default connect(null, {\n  createUser\n})(withRouter(RegisterPageContainer));","map":{"version":3,"sources":["/home/psihoz/WebstormProjects/todo-app/client/src/components/content/register/RegisterPage.jsx"],"names":["React","withRouter","connect","createUser","s","RegisterForm","useAlert","RegisterPageContainer","props","alert","onSubmit","formData","username","email","password","then","res","console","log","user","success","message","history","push","error","RegisterPage","registerWrapper"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAUC,UAAV,QAA4B,4BAA5B;AACA,OAAOC,CAAP,MAAc,uBAAd;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,QAAT,QAAyB,aAAzB;;AAEA,MAAMC,qBAAqB,GAAGC,KAAK,IAAI;AACrC,MAAIC,KAAK,GAAGH,QAAQ,EAApB;;AACA,QAAMI,QAAQ,GAAGC,QAAQ,IAAI;AAC3BH,IAAAA,KAAK,CACFL,UADH,CACcQ,QAAQ,CAACC,QADvB,EACiCD,QAAQ,CAACE,KAD1C,EACiDF,QAAQ,CAACG,QAD1D,EAEGC,IAFH,CAESC,GAAD,IAAS;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AACA,UAAGA,GAAG,CAACG,IAAP,EAAa;AACXV,QAAAA,KAAK,CAACW,OAAN,CAAcJ,GAAG,CAACK,OAAlB;AACAb,QAAAA,KAAK,CAACc,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACD,OAHD,MAGO;AACLd,QAAAA,KAAK,CAACe,KAAN,CAAYR,GAAG,CAACK,OAAhB;AACD;AACF,KAVH;AAYD,GAbD;;AAcA,SAAO,oBAAC,YAAD;AAAc,IAAA,QAAQ,EAAEX;AAAxB,KAAsCF,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAjBD;;AAkBA,MAAMiB,YAAY,GAAGjB,KAAK,IAAI;AAE5B,SACE;AAAK,IAAA,SAAS,YAAKJ,CAAC,CAACsB,eAAP,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEE,oBAAC,YAAD;AAAc,IAAA,QAAQ,EAAElB,KAAK,CAACE,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAM,IAAA,IAAI,EAAC,MAAX;AAAkB,IAAA,QAAQ,EAAE,CAA5B;AAA+B,IAAA,OAAO,EAAE,MAAMF,KAAK,CAACc,OAAN,CAAcC,IAAd,CAAmB,QAAnB,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACgB,GADhB,CAHF,CADF;AASD,CAXD;;AAaA,eAAerB,OAAO,CACpB,IADoB,EAEpB;AACEC,EAAAA;AADF,CAFoB,CAAP,CAKbF,UAAU,CAACM,qBAAD,CALG,CAAf","sourcesContent":["/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {  createUser } from '../../../redux/authReducer';\nimport s from './register.module.css';\nimport RegisterForm from './RegisterForm';\nimport { useAlert } from 'react-alert';\n\nconst RegisterPageContainer = props => {\n  let alert = useAlert()\n  const onSubmit = formData => {\n    props\n      .createUser(formData.username, formData.email, formData.password)\n      .then((res) => {\n        console.log(res)\n        if(res.user) {\n          alert.success(res.message)\n          props.history.push('/')\n        } else {\n          alert.error(res.message)\n        }\n      });\n\n  };\n  return <RegisterPage onSubmit={onSubmit} {...props} />;\n};\nconst RegisterPage = props => {\n\n  return (\n    <div className={`${s.registerWrapper}`}>\n      register\n      <RegisterForm onSubmit={props.onSubmit}/>\n      <span role=\"link\" tabIndex={0} onClick={() => props.history.push('/login')}>\n        back to login{' '}\n      </span>\n    </div>\n  );\n};\n\nexport default connect(\n  null,\n  {\n    createUser\n  },\n)(withRouter(RegisterPageContainer));\n"]},"metadata":{},"sourceType":"module"}