{"ast":null,"code":"var _jsxFileName = \"/home/psihoz/todo-app-back/client/src/components/header/Header.jsx\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport TodosAPI from '../../api/TodosAPI';\nimport { setTasks } from '../../redux/navReducer';\nimport { logout, setUserSession } from '../../redux/authReducer';\nimport s from './header.module.css';\nimport UsersAPI from '../../api/UsersAPI';\nimport HeaderLabel from './headerLabel';\n\nlet Header = props => {\n  useEffect(() => {\n    UsersAPI.isAuth().then(data => props.setUserSession(data.user)) // .then(() => TodosAPI.getAllTodos())\n    .then(data => {// return props.setTasks(data);\n    }).catch(err => console.log(err));\n  }, [props.isAuth]);\n  const isAuth = props.isAuth,\n        currentUser = props.currentUser,\n        history = props.history;\n  return React.createElement(\"div\", {\n    className: \"row \".concat(s.header),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(HeaderLabel, Object.assign({\n    isAuth: isAuth,\n    currentUser: currentUser,\n    logout: props.logout,\n    history: history\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })));\n};\n\nconst mapStateToProps = state => ({\n  isAuth: state.authReducer.isAuth,\n  currentUser: state.authReducer.currentUser\n});\n\nexport default withRouter(connect(mapStateToProps, {\n  setTasks,\n  logout,\n  setUserSession\n})(Header));","map":{"version":3,"sources":["/home/psihoz/todo-app-back/client/src/components/header/Header.jsx"],"names":["React","useEffect","connect","withRouter","TodosAPI","setTasks","logout","setUserSession","s","UsersAPI","HeaderLabel","Header","props","isAuth","then","data","user","catch","err","console","log","currentUser","history","header","mapStateToProps","state","authReducer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,MAAT,EAAiBC,cAAjB,QAAuC,yBAAvC;AACA,OAAOC,CAAP,MAAc,qBAAd;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,IAAIC,MAAM,GAAIC,KAAD,IAAW;AACtBX,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,QAAQ,CAACI,MAAT,GACGC,IADH,CACQC,IAAI,IAAIH,KAAK,CAACL,cAAN,CAAqBQ,IAAI,CAACC,IAA1B,CADhB,EAEE;AAFF,KAGGF,IAHH,CAGQC,IAAI,IAAI,CACZ;AACD,KALH,EAMGE,KANH,CAMSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANhB;AAOD,GARQ,EAQN,CAACN,KAAK,CAACC,MAAP,CARM,CAAT;AADsB,QAYpBA,MAZoB,GAelBD,KAfkB,CAYpBC,MAZoB;AAAA,QAapBQ,WAboB,GAelBT,KAfkB,CAapBS,WAboB;AAAA,QAcpBC,OAdoB,GAelBV,KAfkB,CAcpBU,OAdoB;AAgBtB,SACE;AAAK,IAAA,SAAS,gBAASd,CAAC,CAACe,MAAX,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AACE,IAAA,MAAM,EAAEV,MADV;AAEE,IAAA,WAAW,EAAEQ,WAFf;AAGE,IAAA,MAAM,EAAET,KAAK,CAACN,MAHhB;AAIE,IAAA,OAAO,EAAEgB;AAJX,KAKMV,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF;AAYD,CA5BD;;AA6BA,MAAMY,eAAe,GAAGC,KAAK,KAAK;AAChCZ,EAAAA,MAAM,EAAEY,KAAK,CAACC,WAAN,CAAkBb,MADM;AAEhCQ,EAAAA,WAAW,EAAEI,KAAK,CAACC,WAAN,CAAkBL;AAFC,CAAL,CAA7B;;AAKA,eAAelB,UAAU,CACvBD,OAAO,CACLsB,eADK,EAEL;AACEnB,EAAAA,QADF;AAEEC,EAAAA,MAFF;AAGEC,EAAAA;AAHF,CAFK,CAAP,CAOEI,MAPF,CADuB,CAAzB","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport TodosAPI from '../../api/TodosAPI';\nimport { setTasks } from '../../redux/navReducer';\nimport { logout, setUserSession } from '../../redux/authReducer';\nimport s from './header.module.css';\nimport UsersAPI from '../../api/UsersAPI';\nimport HeaderLabel from './headerLabel';\n\nlet Header = (props) => {\n  useEffect(() => {\n    UsersAPI.isAuth()\n      .then(data => props.setUserSession(data.user))\n      // .then(() => TodosAPI.getAllTodos())\n      .then(data => {\n        // return props.setTasks(data);\n      })\n      .catch(err => console.log(err));\n  }, [props.isAuth]);\n\n  const {\n    isAuth,\n    currentUser,\n    history\n  } = props;\n  return (\n    <div className={`row ${s.header}`}>\n      <HeaderLabel\n        isAuth={isAuth}\n        currentUser={currentUser}\n        logout={props.logout}\n        history={history}\n        {...props}\n      />\n    </div>\n  );\n\n};\nconst mapStateToProps = state => ({\n  isAuth: state.authReducer.isAuth,\n  currentUser: state.authReducer.currentUser,\n});\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    {\n      setTasks,\n      logout,\n      setUserSession\n    },\n  )(Header),\n);\n"]},"metadata":{},"sourceType":"module"}